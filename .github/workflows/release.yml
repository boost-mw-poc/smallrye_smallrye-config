name: SmallRye Release

on:
  pull_request:
    types: [closed]
    paths:
      - '.github/project.yml'

jobs:
  release:
    runs-on: ubuntu-latest
    name: release
    if: ${{github.event.pull_request.merged == true}}
    env:
      GITHUB_TOKEN: ${{secrets.RELEASE_TOKEN}}

    steps:
      - uses: radcortez/project-metadata-action@main
        name: retrieve project metadata
        id: metadata
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          metadata-file-path: '.github/project.yml'

      - uses: actions/checkout@v4
        with:
          token: ${{secrets.RELEASE_TOKEN}}

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11
          server-id: 'oss.sonatype'
          server-username: 'MAVEN_DEPLOY_USERNAME'
          server-password: 'MAVEN_DEPLOY_TOKEN'
          gpg-private-key: ${{secrets.MAVEN_GPG_PRIVATE_KEY}}
          gpg-passphrase: 'MAVEN_GPG_PASSPHRASE'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: maven release ${{steps.metadata.outputs.current-version}}
        env:
          MAVEN_DEPLOY_USERNAME: ${{secrets.MAVEN_DEPLOY_USERNAME}}
          MAVEN_DEPLOY_TOKEN: ${{secrets.MAVEN_DEPLOY_TOKEN}}
          MAVEN_GPG_PASSPHRASE: ${{secrets.MAVEN_GPG_PASSPHRASE}}
        run: |
          java -version
          git config --global user.name "SmallRye CI"
          git config --global user.email "smallrye@googlegroups.com"
          git checkout -b release
          mvn -B release:prepare -Prelease,coverage -DreleaseVersion=${{steps.metadata.outputs.current-version}} -DdevelopmentVersion=${{steps.metadata.outputs.next-version}}
          git checkout ${{github.base_ref}}
          git rebase release
          mvn -B release:perform -Prelease
          git push
          git push --tags

      - name: docs release ${{steps.metadata.outputs.current-version}}
        run: |
          git checkout -b ${{steps.metadata.outputs.current-version}} ${{steps.metadata.outputs.current-version}}
          cd documentation
          mvn package
          VERSION=${1:-"$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"}
          pipx install pipenv
          pipenv install
          git fetch origin gh-pages --depth=1
          git config --global user.name "SmallRye CI"
          git config --global user.email "smallrye@googlegroups.com"
          pipenv run mike deploy --config-file=mkdocs.yaml --push --update-aliases "${VERSION}" Latest

      - uses: radcortez/milestone-release-action@main
        name: milestone release
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          milestone-title: ${{steps.metadata.outputs.current-version}}
          milestone-next: ${{steps.metadata.outputs.next-version}}

      - name: generate tck report
        run: |
          cd target/checkout
          mvn surefire-report:report
          mv testsuite/tck/target/tck-results.html $GITHUB_WORKSPACE

      - uses: meeDamian/github-release@2.0
        name: upload tck asset to release
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          tag: ${{steps.metadata.outputs.current-version}}
          allow_override: true
          gzip: false
          files: tck-results.html
